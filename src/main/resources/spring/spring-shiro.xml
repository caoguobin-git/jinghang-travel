<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:redis="http://www.springframework.org/schema/redis"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd">


	<!-- shiro开启事务注解 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!--
        /**  除了已经设置的其他路径的认证
     -->
	<!-- shiro工厂bean配置 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- shiro的核心安全接口 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 要求登录时的连接 -->
		<property name="loginUrl" value="/index.do"></property>
		<!-- 登录成功后要跳转的连接 -->
		 <property name="successUrl" value="/index.do"></property>
		<!-- 未认证时要跳转的连接 -->
		<property name="unauthorizedUrl" value="/refuse.do"></property>
		<property name="filters">
			<map>
				<!--退出过滤器-->
				<entry key="logout" value-ref="logoutFilter" />
			</map>
		</property>
		<!-- shiro连接约束配置 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置允许匿名访问 -->
				/images/** = anon
				/js/** = anon
				/build/** = anon
				/logout* = logout
				/bower_components/** = anon
				/css/** = anon
				/dist/** = anon
				/plugins/** = anon
				/pages/home/**=anon
				<!-- 可匿名访问路径，例如：验证码、登录连接、退出连接等 -->
				/user/**=anon
				/login*=anon
				/food/get*=anon
				/hotel/get*=anon
				/scenery/getScenerysByCityName*=anon
				/scenery/doGet*=anon
				/ticket/get*=anon
				/comment/get*=anon
				/strategy/get*=anon
				/strategy/doFind*=anon
				/user/**=anon
				/register*=anon
				/admin/login*=anon
				/index.do=anon
				/city/**=anon


				<!-- 剩余其他路径，必须认证通过才可以访问 -->
				/** = authc
			</value>
		</property>
	</bean>
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login.do" />
	</bean>

	<!-- 配置shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realms">
			<list>
				<ref bean="adminRealm"></ref>
				<ref bean="userRealm"></ref>
			</list>
		</property>
		<property
				name="authenticator" ref="authenticator">
		</property>
	</bean>

	<bean id="authenticator" class="com.travel.realm.MyModularRealmAuthenticator">
		<!-- 配置认证策略，只要有一个Realm认证成功即可，并且返回所有认证成功信息 -->
		<property name="realms">
			<list>
				<ref bean="adminRealm"></ref>
				<ref bean="userRealm"/>
			</list>

		</property>
		<property name="authenticationStrategy">
			<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
		</property>
	</bean>
	<!-- 自定义Realm -->
	<bean id="userRealm" class="com.travel.realm.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
	</bean>
	<bean id="adminRealm" class="com.travel.realm.AdminRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
	</bean>

	<!-- 配置凭证算法匹配器 -->
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<!-- Md5算法 -->
		<property name="hashAlgorithmName" value="Md5"></property>
		<property
				name="hashIterations" value="3"></property>
	</bean>
	
</beans>